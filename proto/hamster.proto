/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.Shanghai_Lunara.hamster_server.service.game.proto;

// Package-wide variables from generator "generated".
option go_package = "proto";

// 解锁采集雇员
message ChangeCollectingStaffsRequest {
  repeated int32 ids = 1;
}

// 解雇或雇佣请求
message ChangeEmployeesRequest {
  repeated int32 id = 1;
}

// 食物变更测试请求
message ChangeFoodsRequest {
  repeated Food foods = 1;
}

// 回收道具请求
message ChangeItemsRequest {
  map<int32, Item> items = 1;
}

// 食谱变更请求
message ChangeRecipesRequest {
  repeated int32 recipes = 1;
}

// 解锁采集场景
message ChangeRegionsRequest {
  repeated int32 ids = 1;
}

// 采集雇员
message CollectingStaff {
  optional int32 id = 1;

  optional int64 lastTime = 2;
}

// 采集雇员请求
message CollectingStaffsRequest {
}

// 采集雇员返回结果
message CollectingStaffsResponse {
  map<int32, CollectingStaff> collectingStaffs = 1;
}

// 模拟增加邮件请求
message DebugAddEmailRequest {
  repeated Email emails = 1;
}

// 模拟增加邮件返回结果
message DebugAddEmailResponse {
  map<int32, Email> emails = 1;
}

// Debug 增加 Employee经验 请求
message DebugAddEmployeesRequest {
  repeated int32 id = 1;

  optional int32 jobExp = 2;

  optional int32 lvExp = 3;
}

// Debug修改Employee history 请求
message DebugChangeEmployeeHistoryRequest {
  optional int32 id = 1;

  optional int32 jobId = 2;

  optional int32 jobLv = 3;

  optional int32 lv = 4;
}

// 开发模式登陆发送内容
message DebugLoginRequest {
  optional string account = 1;

  optional string password = 2;
}

// 开发者模式登陆返回内容
message DebugLoginResponse {
  optional string token = 1;
}

// 开发模式注册账号
message DebugRegisterRequest {
  optional string account = 1;

  optional string password = 2;

  optional string confirmPwd = 3;
}

// 开发模式注册返回结果
message DebugRegisterResponse {
  optional bool result = 1;
}

// 邮件
message Email {
  optional int32 id = 1;

  optional int32 playerId = 2;

  optional string title = 3;

  // 标题
  optional string content = 4;

  // 内容
  optional string data = 5;

  // 附件内容
  optional int32 fromId = 6;

  // 来源ID
  optional int32 sendTime = 7;

  // 发送时间
  optional int32 type = 8;

  // 邮件类型
  optional int32 endTime = 9;

  // 删除时间
  optional int32 expires = 10;

  // 到期时间
  optional int32 isRead = 11;

  // 是否已读
  optional int32 isGot = 12;

  // 是否领取
  optional int32 exist = 13;

  // 是否存在
  optional int32 creatTime = 14;
}

// 邮件请求
message EmailRequest {
}

// 邮件请求返回结果
message EmailResponse {
  map<int32, Email> emails = 1;
}

// 雇员
message Employee {
  optional int32 id = 1;

  optional int32 job_id = 2;

  optional int32 job_exp = 3;

  optional int32 job_lv = 4;

  optional int32 lv = 5;

  optional int32 experience = 6;

  repeated int32 jobs = 7;
}

// 雇员返回结果
message EmployeesData {
  map<int32, Employee> employees = 1;
}

// 雇员请求
message EmployeesRequest {
}

// 雇员返回
message EmployeesResponse {
  optional EmployeesData employees = 1;
}

// 解雇雇员请求
message FireEmployeeRequest {
  optional ChangeEmployeesRequest changeEmployeesRequest = 1;
}

// 解雇雇员返回
message FireEmployeeResponse {
  optional EmployeesData employees = 1;
}

// 食物
message Food {
  optional int32 id = 1;

  optional int32 cid = 2;

  optional float A = 3;

  optional float B = 4;

  optional float C = 5;

  optional float D = 6;
}

// 食物请求数据
message FoodsRequest {
}

// 食物返回结果
message FoodsResponse {
  map<int32, Food> foods = 1;
}

// 物品
message Item {
  optional int32 id = 1;

  optional int32 count = 2;
}

// 背包物品请求内容
message ItemsRequest {
}

// 背包物品返回结果
message ItemsResponse {
  map<int32, Item> items = 1;
}

// 登陆返回内容
message LoginResponse {
  optional string token = 1;
}

// 制作食物请求
message MakeFoodsRequest {
  optional int32 recipeId = 1;

  map<int32, int32> employees = 2;

  optional int32 leaderId = 3;

  optional int32 itemId = 4;

  repeated SingleOrder makingSequences = 5;
}

// 制作食物请求返回结果
message MakeFoodsResponse {
  optional Food food = 1;

  optional EmployeesData employees = 2;

  optional int32 recipeId = 3;
}

// websocket ping
message Ping {
}

// 玩家信息
message Player {
  optional int32 playerId = 1;

  optional string nickName = 2;

  optional int32 iconId = 3;

  optional int32 gold = 4;

  optional int32 jewel = 5;

  optional int32 friendValue = 6;

  map<int32, int32> platformLv = 7;

  optional int32 main_id = 8;

  optional int64 hamster_time = 9;

  optional int32 plot = 10;
}

// 请求玩家数据
message PlayerRequest {
  optional int32 playerId = 1;
}

message PlayerResponse {
  optional Player playerInfo = 1;
}

// websocket pong
message Pong {
}

// 请求制作食物随机序列
message RandomListRequest {
  optional int32 id = 1;
}

// 请求制作食物随机序列返回
message RandomListResponse {
  repeated float randomList = 1;
}

// 随机事件
message RandomTask {
  repeated Item needGoods = 1;

  optional int32 waitTime = 2;
}

// 随机事件请求接口
message RandomTaskRequest {
}

message RandomTaskResponse {
  optional RandomTask randomTask = 1;
}

// 食谱
message Recipe {
  optional int32 id = 1;

  optional int32 A = 2;

  optional int32 B = 3;

  optional int32 C = 4;

  optional int32 D = 5;
}

// 食谱请求
message RecipeRequest {
}

// 食谱返回结果
message RecipeResponse {
  map<int32, Recipe> recipes = 1;
}

// 雇佣雇员请求
message RecruitEmployeeRequest {
  optional ChangeEmployeesRequest changeEmployeesRequest = 1;
}

// 雇佣雇员返回
message RecruitEmployeeResponse {
  optional EmployeesData employees = 1;
}

// 采集场景
message Region {
  optional int32 regionId = 1;

  optional int32 status = 2;

  optional int64 lastTime = 3;

  optional int32 staffId = 4;
}

message RegionData {
  map<int32, Region> regions = 1;
}

// 采集地区请求
message RegionsRequest {
}

// 采集地区返回结果
message RegionsResponse {
  optional RegionData regions = 1;
}

// 开始一个采集场景的请求
message ReqCollectingRequest {
  optional int32 regionId = 1;

  optional int32 staffId = 2;
}

// 开始一个采集场景返回结果
message ReqCollectingResponse {
  optional RegionData regions = 1;
}

// 停止一个采集区域请求
message ReqCollectingStopRequest {
  optional int32 regionId = 1;
}

// 停止一个采集场景返回结果
message ReqCollectingStopResponse {
  optional RegionData regions = 1;
}

// 收获一个采集场景请求
message ReqReapCollectingRequest {
  optional int32 regionId = 1;
}

// 收获一个采集场景返回结果
message ReqReapCollectingResponse {
  optional RegionData regions = 1;
}

message Request {
  optional string serviceApi = 1;

  optional bytes data = 2;
}

message Response {
  optional string serviceApi = 1;

  optional int32 code = 2;

  optional string message = 3;

  optional bytes data = 4;
}

message SDKGuestBindRequest {
  // deviceId：设备唯一ID，可用来做游客升级模式的唯一绑定ID
  optional string deviceId = 1;

  // uid：平台的用户id
  optional string uid = 2;

  // timestamp: 生成sign时的Unix时间戳，用来校验uid的时效性,服务端校验此时间在十分钟之内
  optional string timestamp = 3;

  // sign：签名值，可用来校验uid是否被人抓包恶意篡改（详见下面的uid签名验证）。
  optional string sign = 4;

  // loginType：登录方式，取值为枚举值，分别为String类型的facebook、google、visitor，分
  optional string loginType = 5;
}

message SDKGuestBindResponse {
  optional bool result = 1;
}

// SDK 登陆发送的内容
message SDKLoginRequest {
  // deviceId：设备唯一ID，可用来做游客升级模式的唯一绑定ID
  optional string deviceId = 1;

  // uid：平台的用户id
  optional string uid = 2;

  // timestamp: 生成sign时的Unix时间戳，用来校验uid的时效性,服务端校验此时间在十分钟之内
  optional string timestamp = 3;

  // sign：签名值，可用来校验uid是否被人抓包恶意篡改（详见下面的uid签名验证）。
  optional string sign = 4;

  // loginType：登录方式，取值为枚举值，分别为String类型的facebook、google、visitor，分
  optional string loginType = 5;
}

// 请求序列
message SingleOrder {
  optional int32 employeeId = 1;

  optional int32 platform = 2;
}

